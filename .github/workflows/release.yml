name: Build and Release Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.5.1)'
        required: true
        type: string

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel setuptools
    
    - name: Build package
      run: |
        python -m build
    
    - name: Get built files
      id: get-files
      run: |
        wheel_file=$(ls dist/*.whl)
        source_file=$(ls dist/*.tar.gz)
        echo "wheel_file=$wheel_file" >> $GITHUB_OUTPUT
        echo "source_file=$source_file" >> $GITHUB_OUTPUT
        echo "wheel_name=$(basename $wheel_file)" >> $GITHUB_OUTPUT
        echo "source_name=$(basename $source_file)" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        name: Release ${{ github.ref_name || github.event.inputs.version }}
        draft: false
        prerelease: false
        body: |
          ## Installation
          
          Install directly from this release:
          ```bash
          pip install https://github.com/atomicworkhq/crawl4ai/releases/download/${{ github.ref_name || github.event.inputs.version }}/${{ steps.get-files.outputs.wheel_name }}
          ```
          
          Or download and install locally:
          ```bash
          wget https://github.com/atomicworkhq/crawl4ai/releases/download/${{ github.ref_name || github.event.inputs.version }}/${{ steps.get-files.outputs.wheel_name }}
          pip install ${{ steps.get-files.outputs.wheel_name }}
          ```
        files: |
          ${{ steps.get-files.outputs.wheel_file }}
          ${{ steps.get-files.outputs.source_file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}